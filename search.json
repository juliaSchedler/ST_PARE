[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "PARE Model",
    "section": "",
    "text": "Point-to-Area Random Effects\nLink to this project’s Github Repo (contains all datasets).\nThis site is a guided tutorial on fitting the Point-to-Area Random Effects model as part of the paper “Spatial-Temporal Extreme Modeling for Point-to-Area Random Effects (PARE),” presented at SDSS 2023 and submitted to the accompanying special issue of the Journal of Data Science. The PARE model is described in detail in Section 3.2.1 of the paper.\nFor the other models, see the note in 2. Additional Models.\nThis paper is concerned with modeling extreme values when data are available at the point level, but results are desired at the areal level.\n\n\n\nA map of the rainfall gauges (point-level data) and the hydrologic regions (areal data) used in the analysis.",
    "crumbs": [
      "Point-to-Area Random Effects"
    ]
  },
  {
    "objectID": "PARE.html#load-data-functions-and-packages",
    "href": "PARE.html#load-data-functions-and-packages",
    "title": "1  PARE model",
    "section": "1.1 Load data, functions, and packages",
    "text": "1.1 Load data, functions, and packages\n\n\nCode\nlibrary(dplyr)\nlibrary(sf)\nlibrary(spdep)\nlibrary(extRemes)\nlibrary(ggplot2)\nlibrary(patchwork)\n\nthresh = 253\n\nstations &lt;- read.csv(\"Data/station_info.csv\")\nstat_nos &lt;- stations[,1]\n\nsource(\"Code/HelperFunctions_PARE/format_data.R\")\nsource(\"Code/HelperFunctions_PARE/jitter_n_sym.R\")\nsource(\"Code/HelperFunctions_PARE/get_sym_car_mat.R\")\nsource(\"Code/HelperFunctions_PARE/get_par_car.R\")\nsource(\"Code/HelperFunctions_PARE/get_se.R\")\nsource(\"Code/HelperFunctions_PARE/pars_to_rl.R\")\nsource(\"Code/HelperFunctions_PARE/rl_with_ci.R\")\nsource(\"Code/HelperFunctions_PARE/make_varcov_mats_car.R\")\nsource(\"Code/HelperFunctions_PARE/rl_ci_to_plot_vec.R\")\nsource(\"Code/HelperFunctions_PARE/create_mat.R\")\nsource(\"Code/HelperFunctions_PARE/win_rl_to_plot_dat.R\")\nsource(\"Code/HelperFunctions_PARE/get_latex_table.R\")",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>PARE model</span>"
    ]
  },
  {
    "objectID": "PARE.html#format-time-series-of-gpd-fits",
    "href": "PARE.html#format-time-series-of-gpd-fits",
    "title": "1  PARE model",
    "section": "1.2 Format time series of GPD fits",
    "text": "1.2 Format time series of GPD fits\n\n## load watershed data\nws_regs &lt;- sf::read_sf(\"Data/watershed_region_updated\")\nst_crs(ws_regs) &lt;-sf::st_crs(2278)\n\n## window object generated in Fit_GPD.qmd\n## Load rolling GPD fits (takes a bit)\nwindow &lt;- readRDS(\"Data/window_1day_dclust_updated.rds\")  # list of lists (82 x 601) of GPD fits\nwindow_CVM &lt;- readRDS(\"Data/window_CVM_updated.rds\")\nwindow_AD &lt;- readRDS(\"Data/window_AD_updated.rds\")\n\n## Extract windows (note varying # stations)\ndat_win_22 &lt;- format_data(window[[22]], stations, ws_regs, window_CVM[[22]]) # 34\ndat_win_52 &lt;- format_data(window[[52]], stations, ws_regs, window_CVM[[52]]) # 28\ndat_win_82 &lt;- format_data(window[[82]], stations, ws_regs, window_CVM[[82]]) # 149\n\n## save values (faster than reading entire window[[]] object)\nsave(dat_win_22, file = \"Data/dat_win_22\")\nsave(dat_win_52, file = \"Data/dat_win_52\")\nsave(dat_win_82, file = \"Data/dat_win_82\")",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>PARE model</span>"
    ]
  },
  {
    "objectID": "PARE.html#construct-spatial-weight-matrices",
    "href": "PARE.html#construct-spatial-weight-matrices",
    "title": "1  PARE model",
    "section": "1.3 Construct spatial weight matrices",
    "text": "1.3 Construct spatial weight matrices\n\n\n\n\n\n\nGenerating the Hausdorff matrix\n\n\n\n\n\nThe hausMat function and additional documentation can be found in the hausdorff Github repository.\n\n# (make sure ws_regs is projected first)\ndistMat &lt;- hausMat(ws_regs, f1 = 0.5)\ndistMat/5280\n\n# save output\n# saveRDS(distMat, file = \"~/Documents/GitHub/Spatial_Extreme_Value_Modeling/Data/hMat_med.rds\")\n\n\n\n\n\n# read in previously computed Hausdorff matrix and convert units to miles\nhMat &lt;- readRDS(file = \"Data/hMat_med.rds\")\nhMat_miles &lt;- hMat/5280\n\n## Create weight matrix for each window \n## Accounts for different numbers of stations (varying point-to-area structure)\n## Jiters the values to give valid weight matrix\nset.seed(24)\nD_22 &lt;- get_sym_car_mat(dat_win_22, hMat_miles)\nD_52 &lt;- get_sym_car_mat(dat_win_52, hMat_miles)\nD_82 &lt;- get_sym_car_mat(dat_win_82, hMat_miles)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>PARE model</span>"
    ]
  },
  {
    "objectID": "PARE.html#fit-models-to-each-window-for-each-parameter",
    "href": "PARE.html#fit-models-to-each-window-for-each-parameter",
    "title": "1  PARE model",
    "section": "1.4 Fit models to each window for each parameter",
    "text": "1.4 Fit models to each window for each parameter\nTo obtain region-level estimates of the GPD parameters, fit a conditional auto-regressive model for each GPD parameter for each window, a total of 9 models.\n\n## window 22\n## Fit models\ncar_shape_22 &lt;- spatialreg::spautolm(shape ~ -1 + Reg1 + Reg2 + Reg3, \n                                     data = dat_win_22, family=\"CAR\", \n                                     listw=mat2listw(1/D_22, style = \"C\"))\ncar_ln.scale_22 &lt;- spatialreg::spautolm(log(scale) ~ -1 + Reg1 + Reg2 + Reg3, \n                                        data = dat_win_22, family=\"CAR\", \n                                        listw=mat2listw(1/D_22,style = \"C\"))\ncar_rate_22 &lt;- spatialreg::spautolm(rate ~ -1 + Reg1 + Reg2 + Reg3, \n                                    data = dat_win_22, family=\"CAR\", \n                                    listw=mat2listw(1/D_22, style = \"C\"))\n## extract parameter estimates\npar_22 &lt;- get_par_car(car_ln.scale_22, car_shape_22, car_rate_22)\nse_22 &lt;- get_se(car_ln.scale_22, car_shape_22, car_rate_22)[3,]\ncar_varcov_22 &lt;- make_varcov_mats_car(car_ln.scale_22, car_shape_22)  # se of scale 8.5, 4, 9.25\nst_devs_22 &lt;- data.frame(Reg1 = c(sqrt(diag(car_varcov_22[[1]])), se_22[1]),\n                         Reg2 = c(sqrt(diag(car_varcov_22[[2]])), se_22[2]), \n                         Reg3 = c(sqrt(diag(car_varcov_22[[3]])), se_22[3]))\nrow.names(st_devs_22) &lt;- row.names(par_22)\n\n\n\n## window 52\n## Fit models\ncar_shape_52 &lt;- spatialreg::spautolm(shape ~ -1 + Reg1 + Reg2 + Reg3, \n                                     data = dat_win_52, family=\"CAR\", \n                                     listw=mat2listw(1/D_52, style = \"C\"))\ncar_ln.scale_52 &lt;- spatialreg::spautolm(log(scale) ~ -1 + Reg1 + Reg2 + Reg3, \n                                        data = dat_win_52, family=\"CAR\", \n                                        listw=mat2listw(1/D_52, style = \"C\"))\ncar_rate_52 &lt;- spatialreg::spautolm(rate ~ -1 + Reg1 + Reg2 + Reg3, \n                                    data = dat_win_52, family=\"CAR\", \n                                    listw=mat2listw(1/D_52, style = \"C\"))\n## Extract parameter estimates\npar_52 &lt;- get_par_car(car_ln.scale_52, car_shape_52, car_rate_52)\nse_52 &lt;- get_se(car_ln.scale_52, car_shape_52, car_rate_52)[3,]\ncar_varcov_52 &lt;- make_varcov_mats_car(car_ln.scale_52, car_shape_52)  # se of scale 8.5, 4, 9.25\nst_devs_52 &lt;- data.frame(Reg1 = c(sqrt(diag(car_varcov_52[[1]])), se_52[1]),\n                         Reg2 = c(sqrt(diag(car_varcov_52[[2]])), se_52[2]), \n                         Reg3 = c(sqrt(diag(car_varcov_52[[3]])), se_52[3]))\n\n## window 82\n## fit models\ncar_shape_82 &lt;- spatialreg::spautolm(shape ~ -1 + Reg1 + Reg2 + Reg3, \n                                     data = dat_win_82, family=\"CAR\", \n                                     listw=mat2listw(1/D_82, style = \"C\"))\ncar_ln.scale_82 &lt;- spatialreg::spautolm(log(scale) ~ -1 + Reg1 + Reg2 + Reg3, \n                                        data = dat_win_82, family=\"CAR\", \n                                        listw=mat2listw(1/D_82, style = \"C\"))\ncar_rate_82 &lt;- spatialreg::spautolm(rate ~ -1 + Reg1 + Reg2 + Reg3, \n                                    data = dat_win_82, family=\"CAR\", \n                                    listw=mat2listw(1/D_82, style = \"C\"))\n## Extract parameter estiamtes\npar_82 &lt;- get_par_car(car_ln.scale_82, car_shape_82, car_rate_82)\nse_82 &lt;- get_se(car_ln.scale_82, car_shape_82, car_rate_82)[3,]\ncar_varcov_82 &lt;- make_varcov_mats_car(car_ln.scale_82, car_shape_82)  # se of scale 8.5, 4, 9.25\nst_devs_82 &lt;- data.frame(Reg1 = c(sqrt(diag(car_varcov_82[[1]])), se_82[1]),\n                         Reg2 = c(sqrt(diag(car_varcov_82[[2]])), se_82[2]), \n                         Reg3 = c(sqrt(diag(car_varcov_82[[3]])), se_82[3]))\n\n\n1.4.1 Table of parameter estimates\n\n\nPARE portion of Table S3 \n First 40 Years of Data (1921-1960) \n Parameters\n\n\n              Reg1         Reg2         Reg3\nscale 230.85855709 200.15626351 198.45979895\nshape  -0.01912063   0.05329551   0.14923817\nrate    0.02814622   0.03138875   0.03426008\n\n\nStandard Errors\n\n\n              Reg1         Reg2         Reg3\nscale 5.3213141641 3.0221032578 4.5999740852\nshape 0.0313947823 0.0204812334 0.0315739476\nrate  0.0005872697 0.0003877783 0.0005903755\n\n\nPARE portion of Table S4 \n Second 40 Years of Data (1951-1990) \n Parameters\n\n\n              Reg1        Reg2         Reg3\nscale 171.95531347 202.3189569 217.80371166\nshape   0.17232481   0.1340430   0.16194601\nrate    0.02981064   0.0317399   0.03388214\n\n\nStandard Errors\n\n\n          Reg1         Reg2         Reg3\n1 4.4827004098 2.7176004289 6.6253934853\n2 0.0131459688 0.0067930158 0.0153266095\n3 0.0006522969 0.0003391368 0.0007591396\n\n\nPARE portion of Table 2 \n Last 40 Years of Data (1981-2020) \n Parameters\n\n\n              Reg1         Reg2         Reg3\nscale 215.07848444 236.68456472 223.98647292\nshape   0.20456458   0.16327472   0.18610913\nrate    0.05510062   0.04333857   0.05629901\n\n\nStandard Errors\n\n\n         Reg1        Reg2        Reg3\n1 4.323191117 4.894934005 3.699432968\n2 0.016361116 0.016841085 0.013420937\n3 0.002272369 0.002339033 0.001864008",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>PARE model</span>"
    ]
  },
  {
    "objectID": "PARE.html#calculate-return-levels-cis",
    "href": "PARE.html#calculate-return-levels-cis",
    "title": "1  PARE model",
    "section": "1.5 Calculate return levels + CIs",
    "text": "1.5 Calculate return levels + CIs\n\n### Estimates and CIs for visuals\ncar_rl_25_22  &lt;- rl_with_ci(par_mat = par_22, \n                            varcov_list = car_varcov_22, \n                            return_period = 25, \n                            type = \"ci\", alpha = 0.05)/254\ncar_rl_100_22 &lt;- rl_with_ci(par_22, car_varcov_22, 100, \"ci\")/254\ncar_rl_500_22 &lt;- rl_with_ci(par_22, car_varcov_22, 500, \"ci\")/254\n\ncar_rl_25_52  &lt;- rl_with_ci(par_52, car_varcov_52, 25, \"ci\")/254\ncar_rl_100_52 &lt;- rl_with_ci(par_52, car_varcov_52, 100, \"ci\")/254\ncar_rl_500_52 &lt;- rl_with_ci(par_52, car_varcov_52, 500, \"ci\")/254\n\ncar_rl_25_82  &lt;- rl_with_ci(par_82, car_varcov_82, 25, \"ci\")/254\ncar_rl_100_82 &lt;- rl_with_ci(par_82, car_varcov_82, 100, \"ci\")/254\ncar_rl_500_82 &lt;- rl_with_ci(par_82, car_varcov_82, 500, \"ci\")/254\n\nwin_1 &lt;- rl_ci_to_plot_vec(car_rl_25_22, car_rl_100_22, car_rl_500_22)\nwin_2 &lt;- rl_ci_to_plot_vec(car_rl_25_52, car_rl_100_52, car_rl_500_52)\nwin_3 &lt;- rl_ci_to_plot_vec(car_rl_25_82, car_rl_100_82, car_rl_500_82)\n\nplot_dat &lt;- win_rl_to_plot_dat(win_1, win_2, win_3)\nreg1 &lt;- plot_dat[[1]] # Region 1 data frame for plotting\nreg2 &lt;- plot_dat[[2]] \nreg3 &lt;- plot_dat[[3]] \n\n\n1.5.1 Visualizations\n\n## define horizontal limits for error bars\nreg1$LB_X &lt;- reg2$LB_X &lt;- reg3$LB_X &lt;- c(1957, 1987, 2017)\nreg1$UB_X &lt;- reg2$UB_X &lt;- reg3$UB_X &lt;- c(1963, 1993, 2023)\n\n## legend \ng &lt;- guides(fill = guide_legend(override.aes = list(color = c(\"black\", \"black\", \"black\"),\n                                                    shape = c(15, 16, 18), \n                                                    fill = c(\"black\", \"black\", \"black\"),\n                                                    linetype = c(1,1,1),\n                                                    size = c(2,2,3)\n                                                    )))\n\n## Region 1\nreg1_plot &lt;- ggplot(data=reg1, aes(x=c(1960, 1990, 2020))) + \n    coord_cartesian(ylim = c(3, 41.5)) +\n  ## 500 year\n    geom_point(aes(y=RL_500, color=\"500-Year\", shape = \"500-Year\"), size = 2) + \n    geom_errorbar(aes(ymin=LB_500, ymax=UB_500, col=\"500-Year\", linetype = \"500-Year\"), width = 6)+ \n    geom_rect(aes(ymin=LB_500, ymax=UB_500,xmin = LB_X, xmax = UB_X, fill=\"500-Year\"), alpha=0.1)+\n  ## 100 year\n    geom_point(aes(y=RL_100, color=\"100-Year\", shape = \"100-Year\"), size = 2)+ \n    #geom_errorbar(aes(ymin=LB_100, ymax=UB_100, col=\"100-Year\", linetype = \"100-Year\"), width = 6) +     \n    geom_rect(aes(ymin=LB_100, ymax=UB_100,xmin = LB_X, xmax = UB_X, fill=\"100-Year\"), alpha=0.1)+\n  ##25 year\n    geom_point(aes(y=RL_25, color=\"25-Year\", shape = \"25-Year\"), size = 3) + \n    geom_errorbar(aes(ymin=LB_25, ymax=UB_25, col=\"25-Year\", linetype = \"25-Year\"), width = 6) +\n    geom_rect(aes(ymin=LB_25, ymax=UB_25,xmin = LB_X, xmax = UB_X, fill=\"25-Year\"), alpha=0.1)+\n    scale_x_continuous(breaks = c(1960, 1990,2020)) +\n    scale_colour_manual(name = \"Return Period\", \n                        values = c('500-Year' = \"darkblue\", '100-Year' = \"blue\", '25-Year' = \"skyblue\"),\n                        breaks = c('500-Year', '100-Year', '25-Year')) + \n    scale_linetype_manual(values = c(\"500-Year\" = \"solid\", \"100-Year\" = \"solid\", \"25-Year\" = \"solid\"),\n                          breaks = c('500-Year', '100-Year', '25-Year'), name = \"Return Period\") +\n  scale_fill_manual(name = \"Return Period\", values =  c('500-Year' = \"darkblue\", '100-Year' = \"blue\", '25-Year' = \"lightblue\"), breaks = c('500-Year', '100-Year', '25-Year'))+\n    scale_shape_manual(name = \"Return Period\", values = c('500-Year' = 15, '100-Year' = 16, '25-Year' = 18), breaks = c('500-Year', '100-Year', '25-Year')) +\n     labs(x=\"\", y=\"Return Level (in)\", title=\"Region 1\") + theme_minimal() +   theme(legend.position=\"none\",  \n        axis.text.y = element_text(size = 15), \n        axis.text.x = element_text(size = 12), \n        axis.title.x = element_text(size = 15), \n        title = element_text(size = 15))\n\n## Region 2\nreg2_plot &lt;- ggplot(data=reg2, aes(x=c(1960, 1990, 2020))) + \n    coord_cartesian(ylim = c(3, 41.5)) +\n  ## 500 year\n    geom_point(aes(y=RL_500, color=\"500-Year\", shape = \"500-Year\"), size = 2) + \n    geom_errorbar(aes(ymin=LB_500, ymax=UB_500, col=\"500-Year\", linetype = \"500-Year\"), width = 6)+ \n    geom_rect(aes(ymin=LB_500, ymax=UB_500,xmin = LB_X, xmax = UB_X, fill=\"500-Year\"), alpha=0.1)+\n  ## 100 year\n    geom_point(aes(y=RL_100, color=\"100-Year\", shape = \"100-Year\"), size = 2)+ \n    geom_errorbar(aes(ymin=LB_100, ymax=UB_100, col=\"100-Year\", linetype = \"100-Year\"), width = 6) +     \n    geom_rect(aes(ymin=LB_100, ymax=UB_100,xmin = LB_X, xmax = UB_X, fill=\"100-Year\"), alpha=0.1)+\n  ##25 year\n    geom_point(aes(y=RL_25, color=\"25-Year\", shape = \"25-Year\"), size = 3) + \n    geom_errorbar(aes(ymin=LB_25, ymax=UB_25, col=\"25-Year\", linetype = \"25-Year\"), width = 6) +\n    geom_rect(aes(ymin=LB_25, ymax=UB_25,xmin = LB_X, xmax = UB_X, fill=\"25-Year\"), alpha=0.1)+\n    scale_x_continuous(breaks = c(1960, 1990,2020)) +\n    scale_colour_manual(name = \"Return Period\", \n                        values = c('500-Year' = \"darkred\", '100-Year' = \"red\", '25-Year' = \"pink\"),\n                        breaks = c('500-Year', '100-Year', '25-Year')) + \n    scale_linetype_manual(values = c(\"500-Year\" = \"solid\", \"100-Year\" = \"solid\", \"25-Year\" = \"solid\"),\n                          breaks = c('500-Year', '100-Year', '25-Year'), name = \"Return Period\") +\n  scale_fill_manual(name = \"Return Period\", values =  c('500-Year' = \"darkred\", '100-Year' = \"red\", '25-Year' = \"pink\"), breaks = c('500-Year', '100-Year', '25-Year'))+\n    scale_shape_manual(name = \"Return Period\", values = c('500-Year' = 15, '100-Year' = 16, '25-Year' = 18), breaks = c('500-Year', '100-Year', '25-Year')) +\n     labs(x=\"Last Year of 40-Year Window\", y=\"\", title=\"Region 2\") + theme_minimal() + g +   theme(legend.position=\"bottom\",  \n        axis.text.y = element_text(size = 15), \n        axis.text.x = element_text(size = 12), \n        axis.title.x = element_text(size = 15), \n        title = element_text(size = 15))\n\n\n\n## Region 3\nreg3_plot &lt;- ggplot(data=reg3, aes(x=c(1960, 1990, 2020))) + \n    coord_cartesian(ylim = c(3, 41.5)) +\n  ## 500 year\n    geom_point(aes(y=RL_500, color=\"500-Year\", shape = \"500-Year\"), size = 2) + \n    geom_errorbar(aes(ymin=LB_500, ymax=UB_500, col=\"500-Year\", linetype = \"500-Year\"), width = 6)+ \n    geom_rect(aes(ymin=LB_500, ymax=UB_500,xmin = LB_X, xmax = UB_X, fill=\"500-Year\"), alpha=0.1)+\n  ## 100 year\n    geom_point(aes(y=RL_100, color=\"100-Year\", shape = \"100-Year\"), size = 2)+ \n    geom_errorbar(aes(ymin=LB_100, ymax=UB_100, col=\"100-Year\", linetype = \"100-Year\"), width = 6) +     \n    geom_rect(aes(ymin=LB_100, ymax=UB_100,xmin = LB_X, xmax = UB_X, fill=\"100-Year\"), alpha=0.1)+\n  ##25 year\n    geom_point(aes(y=RL_25, color=\"25-Year\", shape = \"25-Year\"), size = 3) + \n    geom_errorbar(aes(ymin=LB_25, ymax=UB_25, col=\"25-Year\", linetype = \"25-Year\"), width = 6) +\n    geom_rect(aes(ymin=LB_25, ymax=UB_25,xmin = LB_X, xmax = UB_X, fill=\"25-Year\"), alpha=0.1)+\n    scale_x_continuous(breaks = c(1960, 1990,2020)) +\n    scale_colour_manual(name = \"Return Period\", \n                        values = c('500-Year' = \"#256e3a\", '100-Year' = \"#5d916c\", '25-Year' = \"#44c96a\"),\n                        breaks = c('500-Year', '100-Year', '25-Year')) + \n    scale_linetype_manual(values = c(\"500-Year\" = \"solid\", \"100-Year\" = \"solid\", \"25-Year\" = \"solid\"),\n                          breaks = c('500-Year', '100-Year', '25-Year'), name = \"Return Period\") +\n  scale_fill_manual(name = \"Return Period\", values =  c('500-Year' = \"#256e3a\", '100-Year' = \"#5d916c\", '25-Year' = \"#44c96a\"), breaks = c('500-Year', '100-Year', '25-Year'))+\n    scale_shape_manual(name = \"Return Period\", values = c('500-Year' = 15, '100-Year' = 16, '25-Year' = 18), breaks = c('500-Year', '100-Year', '25-Year')) +\n     labs(x=\"\", y=\"\", title=\"Region 3\") + theme_minimal() + \n    theme(legend.position=\"none\",  \n        axis.text.y = element_text(size = 15), \n        axis.text.x = element_text(size = 12), \n        axis.title.x = element_text(size = 15), \n        title = element_text(size = 15))\n\n\n\n\n\nPARE_plot = reg1_plot + reg2_plot + reg3_plot +plot_layout(ncol = 3) + \n  plot_annotation(\"Estimated Return Levels - PARE\") & theme(plot.title = element_text(size = 15))\n\n#ggsave(\"Images/PARE_plot.png\", plot = PARE_plot, width = 7.5, height = 3.5, units = \"in\")\n\nPARE_plot\n\n\n\n\n\n\n\n\n\n\n\n\n1.5.2 Table of return levels\n\n## Table S3\ncar_rl_25_22_se  &lt;- rl_with_ci(par_mat = par_22, \n                            varcov_list = car_varcov_22, \n                            return_period = 25, \n                            type = \"se\", alpha = 0.05)/254\ncar_rl_100_22_se &lt;- rl_with_ci(par_22, car_varcov_22, 100, \"se\")/254\ncar_rl_500_22_se &lt;- rl_with_ci(par_22, car_varcov_22, 500, \"se\")/254\n\nprint(\"Return Levels for First 40 Years of Data (1921-1960)\")\n\n[1] \"Return Levels for First 40 Years of Data (1921-1960)\"\n\nrbind(t(car_rl_25_22_se), t(car_rl_100_22_se), t(car_rl_500_22_se))\n\n               Reg1      Reg2       Reg3\n25-yr RL  5.7812602 6.2000477  8.1017057\nSE        0.4268857 0.3273666  0.7538876\n100-yr RL 6.8995253 7.7328867 10.9382561\nSE        0.6450349 0.5268412  1.3344426\n500-yr RL 8.1611487 9.6604967 15.0588530\nSE        0.9508076 0.8372663  2.3736257\n\n## latex output\n# car_rl_22_list &lt;- list(car_rl_25_22_se, car_rl_100_22_se, car_rl_500_22_se)\n# get_latex_table_RL(car_rl_22_list)\n\n\n## Table S4\ncar_rl_25_52_se  &lt;- rl_with_ci(par_52, car_varcov_52, 25, \"se\")/254\ncar_rl_100_52_se &lt;- rl_with_ci(par_52, car_varcov_52, 100, \"se\")/254\ncar_rl_500_52_se &lt;- rl_with_ci(par_52, car_varcov_52, 500, \"se\")/254\n\nprint(\"Return Levels for Second 40 Years of Data (1951-1990)\")\n\n[1] \"Return Levels for Second 40 Years of Data (1951-1990)\"\n\nrbind(t(car_rl_25_52_se), t(car_rl_100_52_se), t(car_rl_500_52_se))\n\n                Reg1       Reg2       Reg3\n25-yr RL   7.3910220  7.7591772  9.1036876\nSE         0.3201394  0.1732745  0.4792676\n100-yr RL 10.1767483 10.3537503 12.4771511\nSE         0.5586972  0.2883097  0.8222935\n500-yr RL 14.3667665 14.0375739 17.4724334\nSE         0.9991024  0.4890933  1.4436359\n\n# Latex output\n# car_rl_52_list &lt;- list(car_rl_25_52_se, car_rl_100_52_se, car_rl_500_52_se)\n# get_latex_table_RL(car_rl_52_list)\n\n\n## TABLE S2 (also Table 3)\ncar_rl_25_82_se  &lt;- rl_with_ci(par_82, car_varcov_82, 25, \"se\")/254\ncar_rl_100_82_se &lt;- rl_with_ci(par_82, car_varcov_82, 100, \"se\")/254\ncar_rl_500_82_se &lt;- rl_with_ci(par_82, car_varcov_82, 500, \"se\")/254\n\n# Latex output\n# car_rl_82_list &lt;- list(car_rl_25_82_se, car_rl_100_82_se, car_rl_500_82_se)\n# get_latex_table_RL(car_rl_82_list)\nprint(\"Return Levels for First 40 Years of Data (1981-2020)\")\n\n[1] \"Return Levels for First 40 Years of Data (1981-2020)\"\n\nrbind(t(car_rl_25_82_se), t(car_rl_100_82_se), t(car_rl_500_82_se))\n\n               Reg1       Reg2       Reg3\n25-yr RL  11.634249 10.4422599 11.3992557\nSE         0.687375  0.5856544  0.5461398\n100-yr RL 16.479569 14.2913625 15.8560177\nSE         1.243511  1.0239274  0.9666489\n500-yr RL 24.130583 20.0023744 22.7002292\nSE         2.309727  1.8186076  1.7503930",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>PARE model</span>"
    ]
  },
  {
    "objectID": "PARE.html#block-kriging",
    "href": "PARE.html#block-kriging",
    "title": "1  PARE model",
    "section": "1.6 Block Kriging",
    "text": "1.6 Block Kriging\nData for Block Kriging Return Level plots from Fagnant ’21 (Block Kriging sections of Tables 5.3, 5.6, 5.7). Data also included in manuscript in Block Kriging section of Tables S5, S6, S2, and 3.\n\n## read in values for Block Kriging-- read from Fagnant 2021\nreg1_bk &lt;- data.frame(RL_25 = c(6.681,7.337,12.008), \n                   RL_100 = c(8.472,9.900,17.277), \n                   RL_500 = c(10.789,13.621,25.800))\nreg1_bk$LB_25 = reg1_bk$RL_25 - 1.96*c(1.578,0.670,2.266)\nreg1_bk$UB_25 = reg1_bk$RL_25 + 1.96*c(1.578,0.670,2.266)\n\nreg1_bk$LB_100 = reg1_bk$RL_100 - 1.96*c(2.630,1.244,4.485)\nreg1_bk$UB_100 = reg1_bk$RL_100 + 1.96*c(2.630,1.244,4.485)\n\nreg1_bk$LB_500 = reg1_bk$RL_500 - 1.96*c(4.319, 2.299,8.969)\nreg1_bk$UB_500 = reg1_bk$RL_500 + 1.96*c(4.319, 2.299,8.969)\n\nreg1_bk$LB_X &lt;- c(1957, 1987, 2017)\nreg1_bk$UB_X &lt;- c(1963, 1993, 2023)\n\nreg2_bk &lt;- data.frame(RL_25 = c(7.523,6.289,11.210), \n                   RL_100 = c(10.073,7.818,15.465), \n                   RL_500 = c(13.717,9.728,21.911))\n\nreg2_bk$LB_25 = reg2_bk$RL_25 - 1.96*c(1.895, 0.462, 2.06)\nreg2_bk$UB_25 = reg2_bk$RL_25 + 1.96*c(1.895, 0.462, 2.06)\n\nreg2_bk$LB_100 = reg2_bk$RL_100 - 1.96*c(3.372,0.771,3.89)\nreg2_bk$UB_100 = reg2_bk$RL_100 + 1.96*c(3.372,0.771,3.89)\n\nreg2_bk$LB_500 = reg2_bk$RL_500 - 1.96*c(5.990, 1.260,7.36)\nreg2_bk$UB_500 = reg2_bk$RL_500 + 1.96*c(5.990, 1.260,7.36)\n\nreg2_bk$LB_X &lt;- c(1957, 1987, 2017)\nreg2_bk$UB_X &lt;- c(1963, 1993, 2023)\n\n\nreg3_bk &lt;- data.frame(RL_25 = c(7.376,7.950,9.141), \n                   RL_100 = c(9.784,10.650,11.865), \n                   RL_500 = c(13.170,14.511,15.607))\n\nreg3_bk$LB_25 = reg3_bk$RL_25 - 1.96*c(1.885,0.823, 1.44)\nreg3_bk$UB_25 = reg3_bk$RL_25 + 1.96*c(1.885,0.823, 1.44)\n\nreg3_bk$LB_100 = reg3_bk$RL_100 - 1.96*c(3.335,1.511, 2.54)\nreg3_bk$UB_100 = reg3_bk$RL_100 + 1.96*c(3.335,1.511, 2.54)\n\nreg3_bk$LB_500 = reg3_bk$RL_500 - 1.96*c(5.870,2.757,4.44)\nreg3_bk$UB_500 = reg3_bk$RL_500 + 1.96*c(5.870,2.757,4.44)\n\nreg3_bk$LB_X &lt;- c(1957, 1987, 2017)\nreg3_bk$UB_X &lt;- c(1963, 1993, 2023)\n\n\n1.6.1 Visualizations\n\n## legend \ng &lt;- guides(fill = guide_legend(override.aes = list(color = c(\"black\", \"black\", \"black\"),\n                                                    shape = c(15, 16, 18), \n                                                    fill = c(\"black\", \"black\", \"black\"),\n                                                    linetype = c(1,1,1),\n                                                    size = c(2,2,3)\n                                                    )))\n\n## Region 1\nreg1_bk_plot &lt;- ggplot(data=reg1_bk, aes(x=c(1960, 1990, 2020))) + \n    coord_cartesian(ylim = c(3, 41.5)) +\n  ## 500 year\n    geom_point(aes(y=RL_500, color=\"500-Year\", shape = \"500-Year\"), size = 2) + \n    geom_errorbar(aes(ymin=LB_500, ymax=UB_500, col=\"500-Year\", linetype = \"500-Year\"), width = 6)+ \n    geom_rect(aes(ymin=LB_500, ymax=UB_500,xmin = LB_X, xmax = UB_X, fill=\"500-Year\"), alpha=0.1)+\n  ## 100 year\n    geom_point(aes(y=RL_100, color=\"100-Year\", shape = \"100-Year\"), size = 2)+ \n    #geom_errorbar(aes(ymin=LB_100, ymax=UB_100, col=\"100-Year\", linetype = \"100-Year\"), width = 6) +     \n    geom_rect(aes(ymin=LB_100, ymax=UB_100,xmin = LB_X, xmax = UB_X, fill=\"100-Year\"), alpha=0.1)+\n  ##25 year\n    geom_point(aes(y=RL_25, color=\"25-Year\", shape = \"25-Year\"), size = 3) + \n    geom_errorbar(aes(ymin=LB_25, ymax=UB_25, col=\"25-Year\", linetype = \"25-Year\"), width = 6) +\n    geom_rect(aes(ymin=LB_25, ymax=UB_25,xmin = LB_X, xmax = UB_X, fill=\"25-Year\"), alpha=0.1)+\n    scale_x_continuous(breaks = c(1960, 1990,2020)) +\n    scale_colour_manual(name = \"Return Period\", \n                        values = c('500-Year' = \"darkblue\", '100-Year' = \"blue\", '25-Year' = \"skyblue\"),\n                        breaks = c('500-Year', '100-Year', '25-Year')) + \n    scale_linetype_manual(values = c(\"500-Year\" = \"solid\", \"100-Year\" = \"solid\", \"25-Year\" = \"solid\"),\n                          breaks = c('500-Year', '100-Year', '25-Year'), name = \"Return Period\") +\n  scale_fill_manual(name = \"Return Period\", values =  c('500-Year' = \"darkblue\", '100-Year' = \"blue\", '25-Year' = \"lightblue\"), breaks = c('500-Year', '100-Year', '25-Year'))+\n    scale_shape_manual(name = \"Return Period\", values = c('500-Year' = 15, '100-Year' = 16, '25-Year' = 18), breaks = c('500-Year', '100-Year', '25-Year')) +\n     labs(x=\"\", y=\"Return Level (in)\", title=\"Region 1\") + theme_minimal() +   theme(legend.position=\"none\",  \n        axis.text.y = element_text(size = 15), \n        axis.text.x = element_text(size = 12), \n        axis.title.x = element_text(size = 15), \n        title = element_text(size = 15))\n\n\n## Region 2\nreg2_bk_plot &lt;- ggplot(data=reg2_bk, aes(x=c(1960, 1990, 2020))) + \n    coord_cartesian(ylim = c(3, 41.5)) +\n  ## 500 year\n    geom_point(aes(y=RL_500, color=\"500-Year\", shape = \"500-Year\"), size = 2) + \n    geom_errorbar(aes(ymin=LB_500, ymax=UB_500, col=\"500-Year\", linetype = \"500-Year\"), width = 6)+ \n    geom_rect(aes(ymin=LB_500, ymax=UB_500,xmin = LB_X, xmax = UB_X, fill=\"500-Year\"), alpha=0.1)+\n  ## 100 year\n    geom_point(aes(y=RL_100, color=\"100-Year\", shape = \"100-Year\"), size = 2)+ \n    geom_errorbar(aes(ymin=LB_100, ymax=UB_100, col=\"100-Year\", linetype = \"100-Year\"), width = 6) +     \n    geom_rect(aes(ymin=LB_100, ymax=UB_100,xmin = LB_X, xmax = UB_X, fill=\"100-Year\"), alpha=0.1)+\n  ##25 year\n    geom_point(aes(y=RL_25, color=\"25-Year\", shape = \"25-Year\"), size = 3) + \n    geom_errorbar(aes(ymin=LB_25, ymax=UB_25, col=\"25-Year\", linetype = \"25-Year\"), width = 6) +\n    geom_rect(aes(ymin=LB_25, ymax=UB_25,xmin = LB_X, xmax = UB_X, fill=\"25-Year\"), alpha=0.1)+\n    scale_x_continuous(breaks = c(1960, 1990,2020)) +\n    scale_colour_manual(name = \"Return Period\", \n                        values = c('500-Year' = \"darkred\", '100-Year' = \"red\", '25-Year' = \"pink\"),\n                        breaks = c('500-Year', '100-Year', '25-Year')) + \n    scale_linetype_manual(values = c(\"500-Year\" = \"solid\", \"100-Year\" = \"solid\", \"25-Year\" = \"solid\"),\n                          breaks = c('500-Year', '100-Year', '25-Year'), name = \"Return Period\") +\n  scale_fill_manual(name = \"Return Period\", values =  c('500-Year' = \"darkred\", '100-Year' = \"red\", '25-Year' = \"pink\"), breaks = c('500-Year', '100-Year', '25-Year'))+\n    scale_shape_manual(name = \"Return Period\", values = c('500-Year' = 15, '100-Year' = 16, '25-Year' = 18), breaks = c('500-Year', '100-Year', '25-Year')) +\n     labs(x=\"Last Year of 40-Year Window\", y=\"\", title=\"Region 2\") + theme_minimal() + g +   theme(legend.position=\"bottom\",  \n        axis.text.y = element_text(size = 15), \n        axis.text.x = element_text(size = 12), \n        axis.title.x = element_text(size = 15), \n        title = element_text(size = 15))\n\n\n\n## Region 3\nreg3_bk_plot &lt;- ggplot(data=reg3_bk, aes(x=c(1960, 1990, 2020))) + \n    coord_cartesian(ylim = c(3, 41.5)) +\n  ## 500 year\n    geom_point(aes(y=RL_500, color=\"500-Year\", shape = \"500-Year\"), size = 2) + \n    geom_errorbar(aes(ymin=LB_500, ymax=UB_500, col=\"500-Year\", linetype = \"500-Year\"), width = 6)+ \n    geom_rect(aes(ymin=LB_500, ymax=UB_500,xmin = LB_X, xmax = UB_X, fill=\"500-Year\"), alpha=0.1)+\n  ## 100 year\n    geom_point(aes(y=RL_100, color=\"100-Year\", shape = \"100-Year\"), size = 2)+ \n    geom_errorbar(aes(ymin=LB_100, ymax=UB_100, col=\"100-Year\", linetype = \"100-Year\"), width = 6) +     \n    geom_rect(aes(ymin=LB_100, ymax=UB_100,xmin = LB_X, xmax = UB_X, fill=\"100-Year\"), alpha=0.1)+\n  ##25 year\n    geom_point(aes(y=RL_25, color=\"25-Year\", shape = \"25-Year\"), size = 3) + \n    geom_errorbar(aes(ymin=LB_25, ymax=UB_25, col=\"25-Year\", linetype = \"25-Year\"), width = 6) +\n    geom_rect(aes(ymin=LB_25, ymax=UB_25,xmin = LB_X, xmax = UB_X, fill=\"25-Year\"), alpha=0.1)+\n    scale_x_continuous(breaks = c(1960, 1990,2020)) +\n    scale_colour_manual(name = \"Return Period\", \n                        values = c('500-Year' = \"#256e3a\", '100-Year' = \"#5d916c\", '25-Year' = \"#44c96a\"),\n                        breaks = c('500-Year', '100-Year', '25-Year')) + \n    scale_linetype_manual(values = c(\"500-Year\" = \"solid\", \"100-Year\" = \"solid\", \"25-Year\" = \"solid\"),\n                          breaks = c('500-Year', '100-Year', '25-Year'), name = \"Return Period\") +\n  scale_fill_manual(name = \"Return Period\", values =  c('500-Year' = \"#256e3a\", '100-Year' = \"#5d916c\", '25-Year' = \"#44c96a\"), breaks = c('500-Year', '100-Year', '25-Year'))+\n    scale_shape_manual(name = \"Return Period\", values = c('500-Year' = 15, '100-Year' = 16, '25-Year' = 18), breaks = c('500-Year', '100-Year', '25-Year')) +\n     labs(x=\"\", y=\"\", title=\"Region 3\") + theme_minimal() + \n  theme(legend.position=\"none\",  \n        axis.text.y = element_text(size = 15), \n        axis.text.x = element_text(size = 12), \n        axis.title.x = element_text(size = 15), \n        title = element_text(size = 15))\n\n\n\n\n\nBK_plot = reg1_bk_plot + reg2_bk_plot + reg3_bk_plot +plot_layout(ncol = 3) + plot_annotation(\"Estimated Return Levels - Block Kriging\") & theme(plot.title = element_text(size = 15))\n\nBK_plot\n\n\n\n\n\n\n\n\n\nggsave(\"Images/BK_plot.png\", plot = BK_plot, width = 7.5, height = 3.5, units = \"in\")",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>PARE model</span>"
    ]
  },
  {
    "objectID": "PARE.html#regional-max",
    "href": "PARE.html#regional-max",
    "title": "1  PARE model",
    "section": "1.7 Regional Max",
    "text": "1.7 Regional Max\nData for Regional Max Return Level plots from Fagnant ’21 (Regional Max sections of Tables 5.3, 5.6, 5.7). Data also included in manuscript in Regional Max section of Tables S5, S6, S2, and 3.\n\n## read in values for Regional Max-- read from Fagnant 2021\nreg1_rm &lt;- data.frame(RL_25 = c(9.349, 9.552, 12.96), \n                   RL_100 = c(12.073, 12.295, 17.54), \n                   RL_500 = c(15.759, 15.999, 24.23))\nreg1_rm$LB_25 = reg1_rm$RL_25 - 1.96*c(1.354, 0.854, 1.33)\nreg1_rm$UB_25 = reg1_rm$RL_25 + 1.96*c(1.354, 0.854, 1.33)\n\nreg1_rm$LB_100 = reg1_rm$RL_100 - 1.96*c(2.341, 1.455, 2.39)\nreg1_rm$UB_100 = reg1_rm$RL_100 + 1.96*c(2.341, 1.455, 2.39)\n\nreg1_rm$LB_500 = reg1_rm$RL_500 - 1.96*c(4.016, 2.470, 4.32)\nreg1_rm$UB_500 = reg1_rm$RL_500 + 1.96*c(4.016, 2.470, 4.32)\n\nreg1_rm$LB_X &lt;- c(1957, 1987, 2017)\nreg1_rm$UB_X &lt;- c(1963, 1993, 2023)\n\nreg2_rm &lt;- data.frame(RL_25 = c(10.895, 11.858, 14.68), \n                   RL_100 = c(15.050, 15.272, 19.68), \n                   RL_500 = c(21.297, 19.852, 26.83))\n\nreg2_rm$LB_25 = reg2_rm$RL_25 - 1.96*c(1.283, 1.025, 1.44)\nreg2_rm$UB_25 = reg2_rm$RL_25 + 1.96*c(1.283, 1.025, 1.44)\n\nreg2_rm$LB_100 = reg2_rm$RL_100 - 1.96*c(2.402, 1.730, 2.53)\nreg2_rm$UB_100 = reg2_rm$RL_100 + 1.96*c(2.402, 1.730, 2.53)\n\nreg2_rm$LB_500 = reg2_rm$RL_500 - 1.96*c(4.517,2.909,4.48)\nreg2_rm$UB_500 = reg2_rm$RL_500 + 1.96*c(4.517,2.909,4.48)\n\nreg2_rm$LB_X &lt;- c(1957, 1987, 2017)\nreg2_rm$UB_X &lt;- c(1963, 1993, 2023)\n\n\nreg3_rm &lt;- data.frame(RL_25 = c(10.037,11.636, 13.75), \n                   RL_100 = c(13.553, 16.109, 18.37), \n                   RL_500 = c(18.659, 22.889, 24.94))\n\nreg3_rm$LB_25 = reg3_rm$RL_25 - 1.96*c(1.179, 1.381, 1.35)\nreg3_rm$UB_25 = reg3_rm$RL_25 + 1.96*c(1.179, 1.381, 1.35)\n\nreg3_rm$LB_100 = reg3_rm$RL_100 - 1.96*c(2.161,2.578, 2.39)\nreg3_rm$UB_100 = reg3_rm$RL_100 + 1.96*c(2.161,2.578, 2.39)\n\nreg3_rm$LB_500 = reg3_rm$RL_500 - 1.96*c(3.956, 4.847, 4.22)\nreg3_rm$UB_500 = reg3_rm$RL_500 + 1.96*c(3.956, 4.847, 4.22)\n\nreg3_rm$LB_X &lt;- c(1957, 1987, 2017)\nreg3_rm$UB_X &lt;- c(1963, 1993, 2023)\n\n\n1.7.1 Visualizations\n\n## legend \ng &lt;- guides(fill = guide_legend(override.aes = list(color = c(\"black\", \"black\", \"black\"),\n                                                    shape = c(15, 16, 18), \n                                                    fill = c(\"black\", \"black\", \"black\"),\n                                                    linetype = c(1,1,1),\n                                                    size = c(2,2,3)\n                                                    )))\n\n## Region 1\nreg1_rm_plot &lt;- ggplot(data=reg1_rm, aes(x=c(1960, 1990, 2020))) + \n    coord_cartesian(ylim = c(3, 41.5)) +\n  ## 500 year\n    geom_point(aes(y=RL_500, color=\"500-Year\", shape = \"500-Year\"), size = 2) + \n    geom_errorbar(aes(ymin=LB_500, ymax=UB_500, col=\"500-Year\", linetype = \"500-Year\"), width = 6)+ \n    geom_rect(aes(ymin=LB_500, ymax=UB_500,xmin = LB_X, xmax = UB_X, fill=\"500-Year\"), alpha=0.1)+\n  ## 100 year\n    geom_point(aes(y=RL_100, color=\"100-Year\", shape = \"100-Year\"), size = 2)+ \n    #geom_errorbar(aes(ymin=LB_100, ymax=UB_100, col=\"100-Year\", linetype = \"100-Year\"), width = 6) +     \n    geom_rect(aes(ymin=LB_100, ymax=UB_100,xmin = LB_X, xmax = UB_X, fill=\"100-Year\"), alpha=0.1)+\n  ##25 year\n    geom_point(aes(y=RL_25, color=\"25-Year\", shape = \"25-Year\"), size = 3) + \n    geom_errorbar(aes(ymin=LB_25, ymax=UB_25, col=\"25-Year\", linetype = \"25-Year\"), width = 6) +\n    geom_rect(aes(ymin=LB_25, ymax=UB_25,xmin = LB_X, xmax = UB_X, fill=\"25-Year\"), alpha=0.1)+\n    scale_x_continuous(breaks = c(1960, 1990,2020)) +\n    scale_colour_manual(name = \"Return Period\", \n                        values = c('500-Year' = \"darkblue\", '100-Year' = \"blue\", '25-Year' = \"skyblue\"),\n                        breaks = c('500-Year', '100-Year', '25-Year')) + \n    scale_linetype_manual(values = c(\"500-Year\" = \"solid\", \"100-Year\" = \"solid\", \"25-Year\" = \"solid\"),\n                          breaks = c('500-Year', '100-Year', '25-Year'), name = \"Return Period\") +\n  scale_fill_manual(name = \"Return Period\", values =  c('500-Year' = \"darkblue\", '100-Year' = \"blue\", '25-Year' = \"lightblue\"), breaks = c('500-Year', '100-Year', '25-Year'))+\n    scale_shape_manual(name = \"Return Period\", values = c('500-Year' = 15, '100-Year' = 16, '25-Year' = 18), breaks = c('500-Year', '100-Year', '25-Year')) +\n     labs(x=\"\", y=\"Return Level (in)\", title=\"Region 1\") + theme_minimal() +\n    theme(legend.position=\"none\",  \n        axis.text.y = element_text(size = 15), \n        axis.text.x = element_text(size = 12), \n        axis.title.x = element_text(size = 15), \n        title = element_text(size = 15))\n\n## Region 2\nreg2_rm_plot &lt;- ggplot(data=reg2_rm, aes(x=c(1960, 1990, 2020))) + \n    coord_cartesian(ylim = c(3, 41.5)) +\n  ## 500 year\n    geom_point(aes(y=RL_500, color=\"500-Year\", shape = \"500-Year\"), size = 2) + \n    geom_errorbar(aes(ymin=LB_500, ymax=UB_500, col=\"500-Year\", linetype = \"500-Year\"), width = 6)+ \n    geom_rect(aes(ymin=LB_500, ymax=UB_500,xmin = LB_X, xmax = UB_X, fill=\"500-Year\"), alpha=0.1)+\n  ## 100 year\n    geom_point(aes(y=RL_100, color=\"100-Year\", shape = \"100-Year\"), size = 2)+ \n    geom_errorbar(aes(ymin=LB_100, ymax=UB_100, col=\"100-Year\", linetype = \"100-Year\"), width = 6) +     \n    geom_rect(aes(ymin=LB_100, ymax=UB_100,xmin = LB_X, xmax = UB_X, fill=\"100-Year\"), alpha=0.1)+\n  ##25 year\n    geom_point(aes(y=RL_25, color=\"25-Year\", shape = \"25-Year\"), size = 3) + \n    geom_errorbar(aes(ymin=LB_25, ymax=UB_25, col=\"25-Year\", linetype = \"25-Year\"), width = 6) +\n    geom_rect(aes(ymin=LB_25, ymax=UB_25,xmin = LB_X, xmax = UB_X, fill=\"25-Year\"), alpha=0.1)+\n    scale_x_continuous(breaks = c(1960, 1990,2020)) +\n    scale_colour_manual(name = \"Return Period\", \n                        values = c('500-Year' = \"darkred\", '100-Year' = \"red\", '25-Year' = \"pink\"),\n                        breaks = c('500-Year', '100-Year', '25-Year')) + \n    scale_linetype_manual(values = c(\"500-Year\" = \"solid\", \"100-Year\" = \"solid\", \"25-Year\" = \"solid\"),\n                          breaks = c('500-Year', '100-Year', '25-Year'), name = \"Return Period\") +\n  scale_fill_manual(name = \"Return Period\", values =  c('500-Year' = \"darkred\", '100-Year' = \"red\", '25-Year' = \"pink\"), breaks = c('500-Year', '100-Year', '25-Year'))+\n    scale_shape_manual(name = \"Return Period\", values = c('500-Year' = 15, '100-Year' = 16, '25-Year' = 18), breaks = c('500-Year', '100-Year', '25-Year')) +\n     labs(x=\"Last Year of 40-Year Window\", y=\"\", title=\"Region 2\") + theme_minimal() + g +   theme(legend.position=\"bottom\",  \n        axis.text.y = element_text(size = 15), \n        axis.text.x = element_text(size = 12), \n        axis.title.x = element_text(size = 15), \n        title = element_text(size = 15))\n\n\n## Region 3\nreg3_rm_plot &lt;- ggplot(data=reg3_rm, aes(x=c(1960, 1990, 2020))) + \n    coord_cartesian(ylim = c(3, 41.5)) +\n  ## 500 year\n    geom_point(aes(y=RL_500, color=\"500-Year\", shape = \"500-Year\"), size = 2) + \n    geom_errorbar(aes(ymin=LB_500, ymax=UB_500, col=\"500-Year\", linetype = \"500-Year\"), width = 6)+ \n    geom_rect(aes(ymin=LB_500, ymax=UB_500,xmin = LB_X, xmax = UB_X, fill=\"500-Year\"), alpha=0.1)+\n  ## 100 year\n    geom_point(aes(y=RL_100, color=\"100-Year\", shape = \"100-Year\"), size = 2)+ \n    geom_errorbar(aes(ymin=LB_100, ymax=UB_100, col=\"100-Year\", linetype = \"100-Year\"), width = 6) +     \n    geom_rect(aes(ymin=LB_100, ymax=UB_100,xmin = LB_X, xmax = UB_X, fill=\"100-Year\"), alpha=0.1)+\n  ##25 year\n    geom_point(aes(y=RL_25, color=\"25-Year\", shape = \"25-Year\"), size = 3) + \n    geom_errorbar(aes(ymin=LB_25, ymax=UB_25, col=\"25-Year\", linetype = \"25-Year\"), width = 6) +\n    geom_rect(aes(ymin=LB_25, ymax=UB_25,xmin = LB_X, xmax = UB_X, fill=\"25-Year\"), alpha=0.1)+\n    scale_x_continuous(breaks = c(1960, 1990,2020)) +\n    scale_colour_manual(name = \"Return Period\", \n                        values = c('500-Year' = \"#256e3a\", '100-Year' = \"#5d916c\", '25-Year' = \"#44c96a\"),\n                        breaks = c('500-Year', '100-Year', '25-Year')) + \n    scale_linetype_manual(values = c(\"500-Year\" = \"solid\", \"100-Year\" = \"solid\", \"25-Year\" = \"solid\"),\n                          breaks = c('500-Year', '100-Year', '25-Year'), name = \"Return Period\") +\n  scale_fill_manual(name = \"Return Period\", values =  c('500-Year' = \"#256e3a\", '100-Year' = \"#5d916c\", '25-Year' = \"#44c96a\"), breaks = c('500-Year', '100-Year', '25-Year'))+\n    scale_shape_manual(name = \"Return Period\", values = c('500-Year' = 15, '100-Year' = 16, '25-Year' = 18), breaks = c('500-Year', '100-Year', '25-Year')) +\n     labs(x=\"\", y=\"\", title=\"Region 3\") + theme_minimal() + \n  theme(legend.position=\"none\",  \n        axis.text.y = element_text(size = 15), \n        axis.text.x = element_text(size = 12), \n        axis.title.x = element_text(size = 15), \n        title = element_text(size = 15))\n\n\nRegmax_plot = reg1_rm_plot + reg2_rm_plot + reg3_rm_plot +plot_layout(ncol = 3) + plot_annotation(\"Estimated Return Levels - Regional Max\") & theme(plot.title = element_text(size = 15))\n\nRegmax_plot\n\n\n\n\n\n\n\n\n\nggsave(\"Images/Regmax_plot.png\", plot = Regmax_plot, width = 7.5, height = 3.5, units = \"in\")",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>PARE model</span>"
    ]
  },
  {
    "objectID": "KrigingRegionalMax.html",
    "href": "KrigingRegionalMax.html",
    "title": "2  Block Kriging and Regional Max code",
    "section": "",
    "text": "The code in the previous few files has been curated for ease-of-use with a focus on the PARE model, which is the novel part of the paper.\nCode for all three models PARE, Block Kriging, and Regional Max methods the full analysis as originally included in Fagnant 2021 are available on Github.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Additional Models</span>"
    ]
  },
  {
    "objectID": "Fit_GPD.html#setup-and-declustering",
    "href": "Fit_GPD.html#setup-and-declustering",
    "title": "3  Fitting GPD to moving windows",
    "section": "3.1 Setup and Declustering",
    "text": "3.1 Setup and Declustering\n\n# Recall PRCP = Precipitation is measured as \"tenths of mm\"   (254 = 1 inch)\n# To get inches: x/254\n# To get mm: x/10\n\nlibrary(lubridate)\nlibrary(extRemes)\nlibrary(stats)\nlibrary(dplyr)\nlibrary(xts)\nlibrary(gnFit)\nlibrary(ismev)\n# library(tseries)\n# library(trend)\n# library(astsa)\n# library(ggmap)\n\n\n# Load in the precipitation data\nprecip &lt;- read.csv(\"../scrape-NOAA-data/Data/all_stations_precip_UDP_updated_2021.csv\")  \n\n### Declustering\nprecip_dclust = precip\nfor ( i in seq(from=2, to=length(precip[1,]))){\n  station = precip[,i]\n  non_na = which(station&gt;=0)\n  station[is.na(station)] &lt;- 0\n  \n  dec = extRemes::decluster(station, threshold=0, clusterfun = \"max\", replace.with = 0)\n  stat_clus = as.numeric(dec)\n  \n  station = stat_clus\n  precip_dclust[non_na,i] = station[non_na]\n}\n\n### format\nprecip_dclust[,1] &lt;- lubridate::ymd(as.character(precip_dclust[,1])) #put Date column into date format\nprecip_dclust &lt;- as.data.frame(precip_dclust) #make it a data frame\n\n### Set threshold\nthresh &lt;- 253   # for 1-day",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Fitting GPD</span>"
    ]
  },
  {
    "objectID": "Fit_GPD.html#fit-gpd-to-entire-series-by-station",
    "href": "Fit_GPD.html#fit-gpd-to-entire-series-by-station",
    "title": "3  Fitting GPD to moving windows",
    "section": "3.2 Fit GPD to entire series by station",
    "text": "3.2 Fit GPD to entire series by station\n\n## NOTE: suppressing some warnings and errors which do not impact the analysis-- they are an artifact of the extent/format of the data (e.g. NAs from before stations were collecting data)\n\n# Distribution Fits -------------------------------------------------------\n\nnumstat &lt;- numrow &lt;- 601 #stations\n#numcol &lt;- 79 #moving windows (this number will change with the new data since we have more years, old data was 1900-2017)\nnumcol &lt;- (2020-39)-1900 +1 \n  #2020-39 will get the starting year for the last window\n  #1900 is the starting year but it is not counted in the math, hence the +1\n\nsource(\"Code/HelperFunctions_GPD/fitgpdR.R\")\n\n# Fit to entire station length --------------------------------------------\n\n# Fitting GPD to entire length of data for each station\nfullfits &lt;- fitgpdR(precip_dclust, thresh)\n# which(is.na(fullfits))  # only a few are NA\n\n\n\nsource(\"Code/HelperFunctions_GPD/gof.R\")\nsource(\"Code/HelperFunctions_GPD/data_no_na.R\")\nsource(\"Code/HelperFunctions_GPD/gof_fix_error.R\")\nfulldata_no_na &lt;- data_no_na(precip_dclust, thresh)  # saving data corresponding to fullfits\n\n## Goodness of fit measures\nCVMp &lt;- ADp &lt;- NULL\nfor(h in c(1:numstat)){ # for some reason 481 was not working with gof fn, so use gof_fix_error  #but it has &lt;1 year in length so will be eliminated anyway\n  if(!sum(is.na(fullfits[[h]]))){\n    gof_h &lt;- gof_fix_error(fulldata_no_na[[h]], dist=\"gpd\", pr=fullfits[[h]]$results$par, threshold=thresh)\n    CVMp[h] &lt;- gof_h$Wpval\n    ADp[h]  &lt;- gof_h$Apval\n  }else{\n    CVMp[h] &lt;- ADp[h]  &lt;- NA\n  }\n}",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Fitting GPD</span>"
    ]
  },
  {
    "objectID": "Fit_GPD.html#gpd-moving-window-fits",
    "href": "Fit_GPD.html#gpd-moving-window-fits",
    "title": "3  Fitting GPD to moving windows",
    "section": "3.3 GPD moving window fits",
    "text": "3.3 GPD moving window fits\nThis code chunk generates the “window” file which is the starting point for the PARE model. It will take some time to run and the resulting file is about 1.6 Gb.\n\n# All Stations - 40-Year Windows ------------------------------------------\n\n# Eventually we will want these fits for all of the 40-year windows, but for now we can just fit to the most recent 40 years.\n\n\n### Uncomment if you want to run from scratch- Note: will take about an hour\n### You can instead load the .rds file below to load a saved copy (see readRDS line below)\n\n# ### 40-YEAR MOVING WINDOWS ///////////////\n#numcol &lt;- 79 #windows of 40\nnumcol &lt;- (2020-39)-1900 +1 \nstartday &lt;- \"-01-01\"\nendday &lt;- \"-12-31\"\nwindow &lt;- list()\nlabelyr &lt;- NULL   # end year of window\n\n# to access window j, gpdfit for station i, use window[[j]][[i]]\n\nstartyr &lt;- 1900\n## Takes awhile to run\n# for(j in 1:numcol){\n#   start &lt;- paste0(startyr, startday)\n#   endyr &lt;- startyr + 39\n#   end &lt;- paste0(endyr, endday)\n#   labelyr[j] &lt;- lubridate::year(as.Date(end))\n# \n#   start &lt;- which(precip_dclust$Date==start)  #finding indexes corresponding to start & end dates\n#   end   &lt;- which(precip_dclust$Date==end)\n#   sub &lt;- precip_dclust[start:end, ]  #subset data to those 40 years\n#   window[[j]] &lt;- fitgpdR(sub, thresh)   # GPD fit with extRemes package\n# \n#   startyr &lt;- startyr + 1\n# }\n# \n\n## Large file-- takes time to save/load\n#saveRDS(window, file=\"Data/window_1day_dclust_updated.rds\")\n\n#window &lt;- readRDS(file=\"Data/window_1day_dclust_updated.rds\")\n## file too big for quarto to load-- could try some of the solutions listed",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Fitting GPD</span>"
    ]
  },
  {
    "objectID": "Fit_GPD.html#calculate-return-levels",
    "href": "Fit_GPD.html#calculate-return-levels",
    "title": "3  Fitting GPD to moving windows",
    "section": "3.4 Calculate return levels",
    "text": "3.4 Calculate return levels\nUsing the GPD parameter estimates to calculate the return level estimates.\n\n# Saving Return Levels for Easy Plotting ----------------------------------\n\n# in mm\n# this is set up differently for easier plotting\n# saving vector of RLs for each station across 79 windows\n\ntrend_RL &lt;- list()\nfor(i in 1:numstat){\n  RL &lt;- NULL\n  for(j in 1:numcol){\n    fit &lt;- window[[j]][[i]]\n    if(!sum(is.na(fit)) == TRUE){\n      RL[j] &lt;- extRemes::return.level(fit, return.period=100)/10  # divide by 10 to get mm\n    }else{\n      RL[j] &lt;- NA\n    }\n  }\n  trend_RL[[i]] &lt;- RL\n}\n\n# trend_RL[[588]] # Hobby\n\ntrend_RL_25 &lt;- list()\ntrend_RL_100 &lt;- list()\ntrend_RL_500 &lt;- list()\nfor(i in 1:numstat){\n  RL_25 &lt;- RL_100 &lt;- RL_500 &lt;- NULL\n  for(j in 1:numcol){\n    fit &lt;- window[[j]][[i]]\n    if(!sum(is.na(fit)) == TRUE){\n      RL_25[j] &lt;- extRemes::return.level(fit, return.period=25)/10  # divide by 10 to get mm\n      RL_100[j] &lt;- extRemes::return.level(fit, return.period=100)/10  # divide by 10 to get mm\n      RL_500[j] &lt;- extRemes::return.level(fit, return.period=500)/10  # divide by 10 to get mm\n    }else{\n      RL_25[j] &lt;- RL_100[j] &lt;- RL_500[j] &lt;- NA\n    }\n  }\n  trend_RL_25[[i]]  &lt;- RL_25\n  trend_RL_100[[i]] &lt;- RL_100\n  trend_RL_500[[i]] &lt;- RL_500\n}\n\n\n#labelyr &lt;- 1939:2017\nlabelyr &lt;- 1939:2020",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Fitting GPD</span>"
    ]
  },
  {
    "objectID": "Fit_GPD.html#goodness-of-fit-measures",
    "href": "Fit_GPD.html#goodness-of-fit-measures",
    "title": "3  Fitting GPD to moving windows",
    "section": "3.5 Goodness of fit measures",
    "text": "3.5 Goodness of fit measures\nThis code chunk performs goodness of fit tests to determine for each of the rolling windows which of the stations have achieved a good fit to the GPD distribution. These goodness-of-fit results are used in the extreme value model fitting process as part of the data cleaning. The spatial models are only applied to stations which do not show evidence of a lack of GPD fit for a particular window.\n\n# Goodness of Fit ---------------------------------------------------------\n# Now going to do GOF for ALL stations, for EACH WINDOW FIT\n### Should save RDS to access saved output instead of having to run again\nwindow_CVM &lt;- matrix(nrow = numstat, ncol = numcol)\nwindow_AD &lt;- matrix(nrow = numstat, ncol = numcol)\nfor(j in 1:numcol){\n  CVMp &lt;- ADp &lt;- NULL\n  for(i in 1:numstat){\n    fit &lt;- window[[j]][[i]]\n    if(!sum(is.na(fit)) == TRUE){\n      gof_h &lt;- gof_fix_error(fit$x, dist=\"gpd\", pr=fit$results$par, threshold=thresh)   # New gof function which corrects for errors by rounding\n      CVMp[i] &lt;- gof_h$Wpval\n      ADp[i] &lt;- gof_h$Apval\n    }else{\n      CVMp[i] &lt;- ADp[i] &lt;- NA\n    }\n  }\n  window_CVM[, j] &lt;- CVMp\n  window_AD[, j] &lt;- ADp\n}\nwindow_CVM &lt;- as.data.frame(window_CVM)\nwindow_AD &lt;- as.data.frame(window_AD)\n\n # saveRDS(window_CVM, file=\"Data/window_CVM_updated.rds\")\n # saveRDS(window_AD, file=\"Data/window_AD_updated.rds\")\n\nwindow_CVM &lt;- readRDS(\"Data/window_CVM_updated.rds\")\nwindow_AD &lt;- readRDS(\"Data/window_AD_updated.rds\")\n\n# window_CVM[i, j] gives CVM (Cramer Von Mises) p-value for station i, window j  (similar for AD is Anderson Darling)\n# window[[j]][[i]] gives gpd fit output for station i, window j",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Fitting GPD</span>"
    ]
  }
]