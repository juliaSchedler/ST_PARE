{
  "hash": "4c3d4ece6168086e3b3966b63d0228c8",
  "result": {
    "markdown": "---\nexecute:\n    freeze: true\n---\n\n\n# PARE model\n\n## Load data, functions, and packages\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(dplyr)\nlibrary(sf)\nlibrary(spdep)\nlibrary(extRemes)\nlibrary(ggplot2)\n\nthresh = 253\n\nstations <- read.csv(\"Data/station_info.csv\")\nstat_nos <- stations[,1]\n\nsource(\"Code/Helper Functions_RealData/format_data.R\")\nsource(\"Code/Helper Functions_RealData/jitter_n_sym.R\")\nsource(\"Code/Helper Functions_RealData/get_sym_car_mat.R\")\nsource(\"Code/Helper Functions_RealData/get_par_car.R\")\nsource(\"Code/Helper Functions_RealData/get_se.R\")\nsource(\"Code/Helper Functions_RealData/pars_to_rl.R\")\nsource(\"Code/Helper Functions_RealData/rl_with_ci.R\")\nsource(\"Code/Helper Functions_RealData/make_varcov_mats_car.R\")\nsource(\"Code/Helper Functions_RealData/rl_ci_to_plot_vec.R\")\nsource(\"Code/Helper Functions_RealData/create_mat.R\")\nsource(\"Code/Helper Functions_RealData/win_rl_to_plot_dat.R\")\nsource(\"Code/Helper Functions_RealData/get_latex_table.R\")\n```\n:::\n\n\n## Format time series of GPD fits\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## load watershed data\nws_regs <- sf::read_sf(\"Data/watershed_region_updated\")\nst_crs(ws_regs) <-sf::st_crs(2278)\n\n## window object generated in Fit_GPD.qmd\n## Load rolling GPD fits (takes a bit)\nwindow <- readRDS(\"Data/window_1day_dclust_updated.rds\")  # list of lists (82 x 601) of GPD fits\nwindow_CVM <- readRDS(\"Data/window_CVM_updated.rds\")\nwindow_AD <- readRDS(\"Data/window_AD_updated.rds\")\n\n## Extract windows (note varying # stations)\ndat_win_22 <- format_data(window[[22]], stations, ws_regs, window_CVM[[22]]) # 34\ndat_win_52 <- format_data(window[[52]], stations, ws_regs, window_CVM[[52]]) # 28\ndat_win_82 <- format_data(window[[82]], stations, ws_regs, window_CVM[[82]]) # 149\n\n## save values (faster than reading entire window[[]] object)\nsave(dat_win_22, file = \"Data/dat_win_22\")\nsave(dat_win_52, file = \"Data/dat_win_52\")\nsave(dat_win_82, file = \"Data/dat_win_82\")\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n## Construct spatial weight matrices\n\n::: {.callout-note collapse=\"true\"}\n## Generating the Hausdorff matrix\n\nThe `hausMat` function and additional documentation can be found in the [`hausdorff` Github repository](https://github.com/juliaSchedler/hausdorff).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# (make sure ws_regs is projected first)\ndistMat <- hausMat(ws_regs, f1 = 0.5)\ndistMat/5280\n\n# save output\n# saveRDS(distMat, file = \"~/Documents/GitHub/Spatial_Extreme_Value_Modeling/Data/hMat_med.rds\")\n```\n:::\n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read in previously computed Hausdorff matrix and convert units to miles\nhMat <- readRDS(file = \"Data/hMat_med.rds\")\nhMat_miles <- hMat/5280\n\n## Create weight matrix for each window \n## Accounts for different numbers of stations (varying point-to-area structure)\n## Jiters the values to give valid weight matrix\nset.seed(24)\nD_22 <- get_sym_car_mat(dat_win_22, hMat_miles)\nD_52 <- get_sym_car_mat(dat_win_52, hMat_miles)\nD_82 <- get_sym_car_mat(dat_win_82, hMat_miles)\n```\n:::\n\n\n## Fit models to each window for each parameter\n\nTo obtain region-level estimates of the GPD parameters, fit a conditional auto-regressive model for each GPD parameter for each window, a total of 9 models.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## window 22\n## Fit models\ncar_shape_22 <- spatialreg::spautolm(shape ~ -1 + Reg1 + Reg2 + Reg3, \n                                     data = dat_win_22, family=\"CAR\", \n                                     listw=mat2listw(1/D_22, style = \"C\"))\ncar_ln.scale_22 <- spatialreg::spautolm(log(scale) ~ -1 + Reg1 + Reg2 + Reg3, \n                                        data = dat_win_22, family=\"CAR\", \n                                        listw=mat2listw(1/D_22,style = \"C\"))\ncar_rate_22 <- spatialreg::spautolm(rate ~ -1 + Reg1 + Reg2 + Reg3, \n                                    data = dat_win_22, family=\"CAR\", \n                                    listw=mat2listw(1/D_22, style = \"C\"))\n## extract parameter estimates\npar_22 <- get_par_car(car_ln.scale_22, car_shape_22, car_rate_22)\nse_22 <- get_se(car_ln.scale_22, car_shape_22, car_rate_22)[3,]\ncar_varcov_22 <- make_varcov_mats_car(car_ln.scale_22, car_shape_22)  # se of scale 8.5, 4, 9.25\nst_devs_22 <- data.frame(Reg1 = c(sqrt(diag(car_varcov_22[[1]])), se_22[1]),\n                         Reg2 = c(sqrt(diag(car_varcov_22[[2]])), se_22[2]), \n                         Reg3 = c(sqrt(diag(car_varcov_22[[3]])), se_22[3]))\nrow.names(st_devs_22) <- row.names(par_22)\n\n\n\n## window 52\n## Fit models\ncar_shape_52 <- spatialreg::spautolm(shape ~ -1 + Reg1 + Reg2 + Reg3, \n                                     data = dat_win_52, family=\"CAR\", \n                                     listw=mat2listw(1/D_52, style = \"C\"))\ncar_ln.scale_52 <- spatialreg::spautolm(log(scale) ~ -1 + Reg1 + Reg2 + Reg3, \n                                        data = dat_win_52, family=\"CAR\", \n                                        listw=mat2listw(1/D_52, style = \"C\"))\ncar_rate_52 <- spatialreg::spautolm(rate ~ -1 + Reg1 + Reg2 + Reg3, \n                                    data = dat_win_52, family=\"CAR\", \n                                    listw=mat2listw(1/D_52, style = \"C\"))\n## Extract parameter estimates\npar_52 <- get_par_car(car_ln.scale_52, car_shape_52, car_rate_52)\nse_52 <- get_se(car_ln.scale_52, car_shape_52, car_rate_52)[3,]\ncar_varcov_52 <- make_varcov_mats_car(car_ln.scale_52, car_shape_52)  # se of scale 8.5, 4, 9.25\nst_devs_52 <- data.frame(Reg1 = c(sqrt(diag(car_varcov_52[[1]])), se_52[1]),\n                         Reg2 = c(sqrt(diag(car_varcov_52[[2]])), se_52[2]), \n                         Reg3 = c(sqrt(diag(car_varcov_52[[3]])), se_52[3]))\n\n## window 82\n## fit models\ncar_shape_82 <- spatialreg::spautolm(shape ~ -1 + Reg1 + Reg2 + Reg3, \n                                     data = dat_win_82, family=\"CAR\", \n                                     listw=mat2listw(1/D_82, style = \"C\"))\ncar_ln.scale_82 <- spatialreg::spautolm(log(scale) ~ -1 + Reg1 + Reg2 + Reg3, \n                                        data = dat_win_82, family=\"CAR\", \n                                        listw=mat2listw(1/D_82, style = \"C\"))\ncar_rate_82 <- spatialreg::spautolm(rate ~ -1 + Reg1 + Reg2 + Reg3, \n                                    data = dat_win_82, family=\"CAR\", \n                                    listw=mat2listw(1/D_82, style = \"C\"))\n## Extract parameter estiamtes\npar_82 <- get_par_car(car_ln.scale_82, car_shape_82, car_rate_82)\nse_82 <- get_se(car_ln.scale_82, car_shape_82, car_rate_82)[3,]\ncar_varcov_82 <- make_varcov_mats_car(car_ln.scale_82, car_shape_82)  # se of scale 8.5, 4, 9.25\nst_devs_82 <- data.frame(Reg1 = c(sqrt(diag(car_varcov_82[[1]])), se_82[1]),\n                         Reg2 = c(sqrt(diag(car_varcov_82[[2]])), se_82[2]), \n                         Reg3 = c(sqrt(diag(car_varcov_82[[3]])), se_82[3]))\n```\n:::\n\n\n### Table of parameter estimates\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Parameters\"\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n              Reg1         Reg2         Reg3\nscale 230.85855709 200.15626351 198.45979895\nshape  -0.01912063   0.05329551   0.14923817\nrate    0.02814622   0.03138875   0.03426008\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Standard Errors\"\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n              Reg1         Reg2         Reg3\nscale 5.3213140942 3.0221032163 4.5999740248\nshape 0.0313947819 0.0204812330 0.0315739471\nrate  0.0005872697 0.0003877783 0.0005903755\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Parameters\"\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n              Reg1        Reg2         Reg3\nscale 171.95531347 202.3189569 217.80371166\nshape   0.17232481   0.1340430   0.16194601\nrate    0.02981064   0.0317399   0.03388214\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Standard Errors\"\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n          Reg1         Reg2         Reg3\n1 4.4827004098 2.7176004289 6.6253934853\n2 0.0131459687 0.0067930158 0.0153266094\n3 0.0006522969 0.0003391368 0.0007591396\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Parameters\"\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n              Reg1         Reg2         Reg3\nscale 215.07848444 236.68456472 223.98647293\nshape   0.20456458   0.16327472   0.18610913\nrate    0.05510062   0.04333857   0.05629901\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Standard Errors\"\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n         Reg1        Reg2        Reg3\n1 4.323191261 4.894934168 3.699433095\n2 0.016361115 0.016841083 0.013420936\n3 0.002272369 0.002339033 0.001864008\n```\n:::\n:::\n\n\n## Calculate return levels + CIs\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### Estimates and CIs for visuals\ncar_rl_25_22  <- rl_with_ci(par_mat = par_22, \n                            varcov_list = car_varcov_22, \n                            return_period = 25, \n                            type = \"ci\", alpha = 0.05)/254\ncar_rl_100_22 <- rl_with_ci(par_22, car_varcov_22, 100, \"ci\")/254\ncar_rl_500_22 <- rl_with_ci(par_22, car_varcov_22, 500, \"ci\")/254\n\ncar_rl_25_52  <- rl_with_ci(par_52, car_varcov_52, 25, \"ci\")/254\ncar_rl_100_52 <- rl_with_ci(par_52, car_varcov_52, 100, \"ci\")/254\ncar_rl_500_52 <- rl_with_ci(par_52, car_varcov_52, 500, \"ci\")/254\n\ncar_rl_25_82  <- rl_with_ci(par_82, car_varcov_82, 25, \"ci\")/254\ncar_rl_100_82 <- rl_with_ci(par_82, car_varcov_82, 100, \"ci\")/254\ncar_rl_500_82 <- rl_with_ci(par_82, car_varcov_82, 500, \"ci\")/254\n\nwin_1 <- rl_ci_to_plot_vec(car_rl_25_22, car_rl_100_22, car_rl_500_22)\nwin_2 <- rl_ci_to_plot_vec(car_rl_25_52, car_rl_100_52, car_rl_500_52)\nwin_3 <- rl_ci_to_plot_vec(car_rl_25_82, car_rl_100_82, car_rl_500_82)\n\nplot_dat <- win_rl_to_plot_dat(win_1, win_2, win_3)\nreg1 <- plot_dat[[1]] # Region 1 data frame for plotting\nreg2 <- plot_dat[[2]] \nreg3 <- plot_dat[[3]] \n```\n:::\n\n\n### Visualize return levels\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=reg1, aes(x=c(1960, 1990, 2020))) + \n    coord_cartesian(ylim = c(3, 41.5)) +\n    geom_line(aes(y=RL_500, color=\"500-Year\", linetype = \"500-Year\")) + geom_point(aes(y=RL_500, color=\"500-Year\")) + geom_ribbon(aes(ymin=LB_500, ymax=UB_500), alpha=0.07, fill=\"darkblue\") +\n    geom_line(aes(y=RL_100, color=\"100-Year\", linetype = \"100-Year\")) + geom_point(aes(y=RL_100, color=\"100-Year\"))+ geom_ribbon(aes(ymin=LB_100, ymax=UB_100), alpha=0.07, fill=\"blue\") +\n    geom_line(aes(y=RL_25, color=\"25-Year\", linetype = \"25-Year\")) + geom_point(aes(y=RL_25, color=\"25-Year\")) + geom_ribbon(aes(ymin=LB_25, ymax=UB_25), alpha=0.15, fill=\"lightblue\") +\n    labs(x=\"Last Year of 40-Year Window\", y=\"Return Level (in)\", title=\"Estimated Return Levels - Model 1 - Region 1\") +\n    scale_colour_manual(name = \"Return Period\", values = c('500-Year' = \"darkblue\", '100-Year' = \"blue\", '25-Year' = \"lightblue\"), breaks = c('500-Year', '100-Year', '25-Year'))+\n    scale_linetype_manual(values = c(\"500-Year\" = \n    \"twodash\", \"100-Year\" = \"longdash\", \"25-Year\" = \"solid\"), breaks = c('500-Year', '100-Year', '25-Year'), name = \"Return Period\") + guides(colour = guide_legend(override.aes = list(shape = NA)))\n```\n\n::: {.cell-output-display}\n![](PARE_files/figure-html/visualize-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data=reg2, aes(x=c(1960, 1990, 2020))) + \n  coord_cartesian(ylim = c(3, 41.5)) +\n  geom_line(aes(y=RL_500, color=\"500-Year\", linetype = \"500-Year\")) + geom_point(aes(y=RL_500, color=\"500-Year\")) + geom_ribbon(aes(ymin=LB_500, ymax=UB_500), alpha=0.07, fill=\"darkred\") +\n  geom_line(aes(y=RL_100, color=\"100-Year\", linetype = \"100-Year\")) + geom_point(aes(y=RL_100, color=\"100-Year\"))+ geom_ribbon(aes(ymin=LB_100, ymax=UB_100), alpha=0.07, fill=\"red\") +\n  geom_line(aes(y=RL_25, color=\"25-Year\", linetype = \"25-Year\")) + geom_point(aes(y=RL_25, color=\"25-Year\")) + geom_ribbon(aes(ymin=LB_25, ymax=UB_25), alpha=0.15, fill=\"pink\") +\n  labs(x=\"Last Year of 40-Year Window\", y=\"Return Level (in)\", title=\"Estimated Return Levels - Model 1 - Region 2\") +\n  scale_colour_manual(name = \"Return Period\", values = c('500-Year' = \"darkred\", '100-Year' = \"red\", '25-Year' = \"pink\"),\n                      breaks = c('500-Year', '100-Year', '25-Year'))+\n    scale_linetype_manual(values = c(\"500-Year\" = \n    \"twodash\", \"100-Year\" = \"longdash\", \"25-Year\" = \"solid\"), breaks = c('500-Year', '100-Year', '25-Year'), name = \"Return Period\") + guides(colour = guide_legend(override.aes = list(shape = NA)))\n```\n\n::: {.cell-output-display}\n![](PARE_files/figure-html/visualize-2.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data=reg3, aes(x=c(1960, 1990, 2020))) + \n    coord_cartesian(ylim = c(3, 41.5)) +\n    geom_line(aes(y=RL_500, color=\"500-Year\", linetype = \"500-Year\")) + geom_point(aes(y=RL_500, color=\"500-Year\")) + geom_ribbon(aes(ymin=LB_500, ymax=UB_500), alpha=0.3, fill=\"#256e3a\") +\n    geom_line(aes(y=RL_100, color=\"100-Year\", linetype = \"100-Year\")) + geom_point(aes(y=RL_100, color=\"100-Year\"))+ geom_ribbon(aes(ymin=LB_100, ymax=UB_100), alpha=0.2, fill=\"#5d916c\") +\n    geom_line(aes(y=RL_25, color=\"25-Year\" , linetype = \"25-Year\")) + geom_point(aes(y=RL_25, color=\"25-Year\")) + geom_ribbon(aes(ymin=LB_25, ymax=UB_25), alpha=0.15, fill=\"#44c96a\") +\n    labs(x=\"Last Year of 40-Year Window\", y=\"Return Level (in)\", title=\"Estimated Return Levels - Model 1 - Region 3\") +\n    scale_colour_manual(name = \"Return Period\",\n                        values = c('500-Year' = \"#256e3a\", '100-Year' = \"#5d916c\", '25-Year' = \"#44c96a\"),\n                        breaks = c('500-Year', '100-Year', '25-Year')) +\n    scale_linetype_manual(values = c(\"500-Year\" = \n    \"twodash\", \"100-Year\" = \"longdash\", \"25-Year\" = \"solid\"), breaks = c('500-Year', '100-Year', '25-Year'), name = \"Return Period\") + guides(colour = guide_legend(override.aes = list(shape = NA)))\n```\n\n::: {.cell-output-display}\n![](PARE_files/figure-html/visualize-3.png){width=672}\n:::\n:::\n\n\n### Table of return levels\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Table 6\ncar_rl_25_22_se  <- rl_with_ci(par_mat = par_22, \n                            varcov_list = car_varcov_22, \n                            return_period = 25, \n                            type = \"se\", alpha = 0.05)/254\ncar_rl_100_22_se <- rl_with_ci(par_22, car_varcov_22, 100, \"se\")/254\ncar_rl_500_22_se <- rl_with_ci(par_22, car_varcov_22, 500, \"se\")/254\n\n## latex output\n#car_rl_22_list <- list(car_rl_25_22_se, car_rl_100_22_se, car_rl_500_22_se)\n#get_latex_table_RL(car_rl_22_list)\n\nrbind(t(car_rl_25_22_se), t(car_rl_100_22_se), t(car_rl_500_22_se))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               Reg1      Reg2       Reg3\n25-yr RL  5.7812602 6.2000477  8.1017057\nSE        0.4268857 0.3273666  0.7538876\n100-yr RL 6.8995253 7.7328867 10.9382561\nSE        0.6450349 0.5268412  1.3344426\n500-yr RL 8.1611487 9.6604967 15.0588530\nSE        0.9508076 0.8372663  2.3736256\n```\n:::\n\n```{.r .cell-code}\n## Table 7\ncar_rl_25_52_se  <- rl_with_ci(par_52, car_varcov_52, 25, \"se\")/254\ncar_rl_100_52_se <- rl_with_ci(par_52, car_varcov_52, 100, \"se\")/254\ncar_rl_500_52_se <- rl_with_ci(par_52, car_varcov_52, 500, \"se\")/254\n\n# Latex output\n#car_rl_52_list <- list(car_rl_25_52_se, car_rl_100_52_se, car_rl_500_52_se)\n#get_latex_table_RL(car_rl_52_list)\nrbind(t(car_rl_25_52_se), t(car_rl_100_52_se), t(car_rl_500_52_se))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                Reg1       Reg2       Reg3\n25-yr RL   7.3910220  7.7591772  9.1036876\nSE         0.3201394  0.1732745  0.4792676\n100-yr RL 10.1767483 10.3537503 12.4771511\nSE         0.5586972  0.2883097  0.8222935\n500-yr RL 14.3667665 14.0375739 17.4724334\nSE         0.9991024  0.4890933  1.4436359\n```\n:::\n\n```{.r .cell-code}\n## TABLE 3\ncar_rl_25_82_se  <- rl_with_ci(par_82, car_varcov_82, 25, \"se\")/254\ncar_rl_100_82_se <- rl_with_ci(par_82, car_varcov_82, 100, \"se\")/254\ncar_rl_500_82_se <- rl_with_ci(par_82, car_varcov_82, 500, \"se\")/254\n\n# Latex output\n#car_rl_82_list <- list(car_rl_25_82_se, car_rl_100_82_se, car_rl_500_82_se)\n#get_latex_table_RL(car_rl_82_list)\n\nrbind(t(car_rl_25_82_se), t(car_rl_100_82_se), t(car_rl_500_82_se))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                Reg1       Reg2       Reg3\n25-yr RL  11.6342489 10.4422599 11.3992557\nSE         0.6873749  0.5856544  0.5461398\n100-yr RL 16.4795690 14.2913625 15.8560177\nSE         1.2435110  1.0239273  0.9666489\n500-yr RL 24.1305826 20.0023744 22.7002292\nSE         2.3097267  1.8186075  1.7503929\n```\n:::\n:::\n",
    "supporting": [
      "PARE_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}